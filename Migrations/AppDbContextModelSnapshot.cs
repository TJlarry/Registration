// <auto-generated />
using System;
using CourseRegistration.Controllers.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseRegistration.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseRegistration.Models.Course", b =>
                {
                    b.Property<int>("C_courseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("C_courseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_courseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_courseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("C_courseID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            C_courseID = 1,
                            C_courseDescription = " DataBase management for beginners",
                            C_courseName = "Database",
                            C_courseNumber = "64745"
                        },
                        new
                        {
                            C_courseID = 2,
                            C_courseDescription = "Intoduction to Object Oreineted Programming ",
                            C_courseName = "Java Programming",
                            C_courseNumber = "64746"
                        },
                        new
                        {
                            C_courseID = 3,
                            C_courseDescription = "Introduction to .NET in C# programming",
                            C_courseName = "C# programming",
                            C_courseNumber = "64747"
                        },
                        new
                        {
                            C_courseID = 4,
                            C_courseDescription = " Basic course on Information Tectnology",
                            C_courseName = "Basic IT",
                            C_courseNumber = "64748"
                        },
                        new
                        {
                            C_courseID = 5,
                            C_courseDescription = "Basic software testing tool for beginners",
                            C_courseName = "Software Testing",
                            C_courseNumber = "64749"
                        },
                        new
                        {
                            C_courseID = 6,
                            C_courseDescription = "HTML5 for begginners",
                            C_courseName = " HTML5",
                            C_courseNumber = "64750"
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.Instructor", b =>
                {
                    b.Property<string>("I_instructorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("C_courseID")
                        .HasColumnType("int");

                    b.Property<string>("I_emailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("I_firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("I_lastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("I_instructorID");

                    b.HasIndex("C_courseID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            I_instructorID = "7773",
                            C_courseID = 1,
                            I_emailAddress = "james.B@gmail.com",
                            I_firstName = "James",
                            I_lastName = "Bonjo"
                        },
                        new
                        {
                            I_instructorID = "7734",
                            C_courseID = 2,
                            I_emailAddress = "john.P@gmail.com",
                            I_firstName = "John",
                            I_lastName = "Prince"
                        },
                        new
                        {
                            I_instructorID = "7373",
                            C_courseID = 3,
                            I_emailAddress = "beth.B@gmail.com",
                            I_firstName = "Beth",
                            I_lastName = "Brand"
                        },
                        new
                        {
                            I_instructorID = "7883",
                            C_courseID = 4,
                            I_emailAddress = "Mark.z@gmail.com",
                            I_firstName = "Mark",
                            I_lastName = "Zoe"
                        },
                        new
                        {
                            I_instructorID = "7353",
                            C_courseID = 5,
                            I_emailAddress = "ZionC@gmail.com",
                            I_firstName = "Zion",
                            I_lastName = "Cain"
                        },
                        new
                        {
                            I_instructorID = "7233",
                            C_courseID = 6,
                            I_emailAddress = "HeatherY@gmail.com",
                            I_firstName = "Heather",
                            I_lastName = "Yari"
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.Student", b =>
                {
                    b.Property<int>("S_studentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("S_EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("S_studentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            S_studentId = 5634,
                            S_EmailAddress = "Bass.Cuppy@gmail.com",
                            S_firstName = "Bass",
                            S_lastName = "Cuppy",
                            S_phoneNumber = "20497845755"
                        },
                        new
                        {
                            S_studentId = 6790,
                            S_EmailAddress = "Peter.Jones@gmail.com",
                            S_firstName = "Peter",
                            S_lastName = "Jones",
                            S_phoneNumber = "63669036034"
                        },
                        new
                        {
                            S_studentId = 3578,
                            S_EmailAddress = "Tayo.Gbemi@gmail.com",
                            S_firstName = "Tayo",
                            S_lastName = "Gbemi",
                            S_phoneNumber = "64758502002"
                        },
                        new
                        {
                            S_studentId = 5989,
                            S_EmailAddress = "Brandy.Brown@gmail.com",
                            S_firstName = "Brandy",
                            S_lastName = "Brown",
                            S_phoneNumber = "67973752652"
                        },
                        new
                        {
                            S_studentId = 124,
                            S_EmailAddress = "KoloBenny@gmail.com",
                            S_firstName = "kolo",
                            S_lastName = "Beny",
                            S_phoneNumber = "08598658635"
                        },
                        new
                        {
                            S_studentId = 6667,
                            S_EmailAddress = "temiReed@gmail.com",
                            S_firstName = "Temi",
                            S_lastName = "Reed",
                            S_phoneNumber = "08552785953"
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.Instructor", b =>
                {
                    b.HasOne("CourseRegistration.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("C_courseID");

                    b.Navigation("Course");
                });
#pragma warning restore 612, 618
        }
    }
}
